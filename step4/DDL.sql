/*
DDL and DML for teh 'Game Quest' Video game catalog database system

by Jovanny Gochez and Matt Villa

Code was generated by MySQL workbench and modified by the team members.
*/

SET FOREIGN_KEY_CHECKS = 0;
SET AUTOCOMMIT = 0;
-- -----------------------------------------------------
-- Table Developers
-- -----------------------------------------------------
DROP TABLE IF EXISTS Developers;
CREATE TABLE IF NOT EXISTS Developers (
    developerID INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(45) NOT NULL UNIQUE,
    PRIMARY KEY (developerID)
);
-- -----------------------------------------------------
-- Table Franchises
-- -----------------------------------------------------
DROP TABLE IF EXISTS Franchises;
CREATE TABLE IF NOT EXISTS Franchises (
    franchiseID INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(45) NOT NULL UNIQUE,
    PRIMARY KEY (franchiseID)
);
-- -----------------------------------------------------
-- Table Games
-- -----------------------------------------------------
DROP TABLE IF EXISTS Games;
CREATE TABLE IF NOT EXISTS Games (
    gameID INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(45) NOT NULL,
    releaseYear VARCHAR(45) NOT NULL,
    price DECIMAL(19, 2) NOT NULL,
    developerID INT NULL,
    franchiseID INT NULL,
    PRIMARY KEY (gameID),
    UNIQUE (title, releaseYear),
    -- The developer and franchise are not critical info, so if those entries are deleted from the other tables, it will simply be set to null here.
    FOREIGN KEY (developerID) REFERENCES Developers(developerID) ON DELETE SET NULL,
    FOREIGN KEY (franchiseID) REFERENCES Franchises(franchiseID) ON DELETE SET NULL
);
-- -----------------------------------------------------
-- Table Platforms
-- -----------------------------------------------------
DROP TABLE IF EXISTS Platforms;
CREATE TABLE IF NOT EXISTS Platforms (
    platformID INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(45) NOT NULL UNIQUE,
    PRIMARY KEY (platformID)
);

-- -----------------------------------------------------
-- Table GameHasPlatforms
-- -----------------------------------------------------
DROP TABLE IF EXISTS GameHasPlatforms;
CREATE TABLE IF NOT EXISTS GameHasPlatforms (
    gameHasPlatformID INT NOT NULL AUTO_INCREMENT,
    gameID INT NOT NULL,
    platformID INT NOT NULL,
    PRIMARY KEY (gameHasPlatformID),
    UNIQUE(gameID, platformID),
    -- deleting a game or platform should delete its entry in this junction table
    FOREIGN KEY (gameID) REFERENCES Games(gameID) ON DELETE CASCADE,
    FOREIGN KEY (platformID) REFERENCES Platforms(platformID) ON DELETE CASCADE
);

-- -----------------------------------------------------
-- Developers and Franchise data needs to be loaded first
-- -----------------------------------------------------
-- Data for table Developers
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO Developers (developerID, name) VALUES 
(1, 'Activision Blizzard'),
(2, 'Epic Games'),
(3, 'Electronic Arts'),
(4, 'Rockstar Games'),
(5, 'Nintendo'),
(6, 'DMA Design'),
(7, 'ConcernedApe');
COMMIT;

-- -----------------------------------------------------
-- Data for table Franchises
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO Franchises (franchiseID, title) VALUES 
(1, 'Halo'),
(2, 'Zelda'),
(3, 'Grand Theft Auto'),
(4, 'Mario'),
(5, 'Pokemon');
COMMIT;

-- -----------------------------------------------------
-- Data for table Games
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO Games (gameID, title, releaseYear, price, developerID, franchiseID, activeInventory) VALUES 
(1, 'Super Mario World', '1990', 10.00, 5, 4, 1),
(2, 'Grand Theft Auto', '1997', 10.00, 6, 3, 1),
(3, 'Stardew Valley', '2016', 39.99, 7, NULL, 1),
(4, 'Tennis For Two', '1958', 500.00, NULL, NULL, 1),
(5, 'Super Mario RPG', '2023', 59.99, 5, 4, 1);
COMMIT;

-- -----------------------------------------------------
-- Data for table Platforms
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO Platforms (platformID, name) VALUES 
(1, 'PC'),
(2, 'Oscilloscope'),
(3, 'Super Nintendo'),
(4, 'Nintendo Switch'),
(5, 'Playstation 5'),
(6, 'Xbox 360'),
(7, 'Xbox Series X');
COMMIT;

-- -----------------------------------------------------
-- Data for table GameHasPlatforms
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO GameHasPlatforms (gameHasPlatformID, gameID, platformID) VALUES 
(1, 4, 2),
(2, 3, 1),
(3, 3, 4),
(4, 3, 7),
(5, 3, 5),
(6, 1, 3),
(7, 1, 4),
(8, 2, 1),
(9, 5, 4);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
COMMIT;
